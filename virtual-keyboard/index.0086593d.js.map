{"mappings":"AAAA,MAAMA,EAAkCC,GAAWC,SAASC,cAAcF,GACpEG,EAAsCH,GAC1CC,SAASG,iBAAiBJ,GAEtBK,EAAuCN,EAAC,UACxCO,EAAyCP,EAAC,aAEhD,GAAoB,MAAhBM,GAA2C,MAAnBC,EAAyB,CACnDD,EAAaE,QAAO,SAAaC,GAC7BC,KAA6BC,UAAUC,SAAQ,UAAQF,KAC7BC,UAAUE,IAAG,SAEzCN,GAAmBA,EAAgBI,UAAUE,IAAG,QAChDJ,EAAEK,mBAGJP,EAAgBC,QAAO,SAAaC,GAClCA,EAAEK,mBAGJZ,SAASM,QAAO,SAAaC,GAC3BF,GAAmBA,EAAgBI,UAAUI,OAAM,QACnDT,GAAgBA,EAAaK,UAAUI,OAAM,UAG/C,IAAIC,EAAI,GAER,MAAMC,EAAkCb,EAAE,yBAE1Ca,EAAOC,SAASC,IACdA,EAAIC,YAAW,gBACST,UAAUE,IAAG,WAErCM,EAAIE,UAAS,gBACWV,UAAUI,OAAM,cAI1CE,EAAOC,SAASC,IACdA,EAAIX,QAAO,SAAaC,UACXU,EAAIG,QAAQC,iBAGnBP,GAAQG,EAAIK,UACZlB,EAAakB,UAAYR,wBAGzBS,EAAO,mCAGPA,EAAO,gCAGPA,EAAO,6BAGPA,EAAO,gCAGPT,EAAOA,EAAKU,OAAO,EAAGV,EAAKW,OAAS,GACpCrB,EAAakB,UAAYR,oBAGzBA,GAAI,IACJV,EAAakB,UAAYR,qBAGzBA,GAAI,KACJV,EAAakB,UAAYR,gBAM1BS,EAAQG,GAC+BxB,EAAE,mBAClCc,SAAQW,GAAQA,EAAKC,MAAMC,QAAO,SAC/C/B,EAAC,mBAAsB4B,GAAsBE,MAAMC,QAAO","sources":["src/virtual-keyboard/main.ts"],"sourcesContent":["const $: ParentNode[\"querySelector\"] = (s: any) => document.querySelector(s);\r\nconst $$: ParentNode[\"querySelectorAll\"] = (s: any) =>\r\n  document.querySelectorAll(s);\r\n\r\nconst inputElement: HTMLSpanElement | null = $(\".input\");\r\nconst keyboardElement: HTMLDivElement | null = $(\".keyboard\");\r\n\r\nif (inputElement != null && keyboardElement != null) {\r\n  inputElement.onclick = function (e) {\r\n    if (!(this as HTMLSpanElement).classList.contains(\"focus\")) {\r\n      (this as HTMLSpanElement).classList.add(\"focus\");\r\n    }\r\n    keyboardElement && keyboardElement.classList.add(\"show\");\r\n    e.stopPropagation();\r\n  };\r\n\r\n  keyboardElement.onclick = function (e) {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  document.onclick = function (e) {\r\n    keyboardElement && keyboardElement.classList.remove(\"show\");\r\n    inputElement && inputElement.classList.remove(\"focus\");\r\n  };\r\n\r\n  let text = \"\";\r\n\r\n  const keyArr: NodeListOf<HTMLElement> = $$(\".keyboard .row > span\");\r\n\r\n  keyArr.forEach((key) => {\r\n    key.onmousedown = function () {\r\n      (this as HTMLElement).classList.add(\"active\");\r\n    };\r\n    key.onmouseup = function () {\r\n      (this as HTMLElement).classList.remove(\"active\");\r\n    };\r\n  });\r\n\r\n  keyArr.forEach((key) => {\r\n    key.onclick = function (e) {\r\n      let type = key.dataset.type;\r\n      switch (type) {\r\n        case \"char\":\r\n          text += key.innerText;\r\n          inputElement.innerText = text;\r\n          break;\r\n        case \"uppercase\":\r\n          setPage('uppercase')\r\n          break;\r\n        case \"lowercase\":\r\n          setPage('lowercase')\r\n          break;\r\n        case \"number\":\r\n          setPage('number')\r\n          break;\r\n        case \"symbol\":\r\n          setPage('symbol')\r\n          break; \r\n        case \"backspace\":\r\n          text = text.substr(0, text.length - 1)\r\n          inputElement.innerText = text;\r\n          break;\r\n        case \"space\":\r\n          text += ' '\r\n          inputElement.innerText = text;\r\n          break;\r\n        case \"return\":\r\n          text += '\\n'\r\n          inputElement.innerText = text;\r\n          break;\r\n      }\r\n    };\r\n  });  \r\n}\r\nfunction setPage(name: string){\r\n  const keyboardPages:NodeListOf<HTMLElement> = $$('.keyboard .page')\r\n  keyboardPages.forEach(page => page.style.display = 'none');\r\n  ($('.keyboard .page-' + name) as HTMLElement).style.display = 'block'\r\n}\r\n"],"names":["$119bd9b255e262a9$var$$","s","document","querySelector","$119bd9b255e262a9$var$$$","querySelectorAll","$119bd9b255e262a9$var$inputElement","$119bd9b255e262a9$var$keyboardElement","onclick","e","this","classList","contains","add","stopPropagation","remove","text","keyArr","forEach","key","onmousedown","onmouseup","dataset","type","innerText","$119bd9b255e262a9$var$setPage","substr","length","name","page","style","display"],"version":3,"file":"index.0086593d.js.map"}